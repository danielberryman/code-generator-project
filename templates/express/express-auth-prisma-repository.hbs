import { User } from ".prisma/client";
import { prisma } from "..";

export type UserDto = {
  password?: string;
  resetToken?: string | null;
};

export type NewUserDto = {
  email: string;
  password: string;
};

async function create(user: NewUserDto): Promise<User | null> {
  return await prisma.user.create({ data: user });
}

async function getById(id: string): Promise<User | null> {
  return await prisma.user.findUnique({
    where: {
      id,
    },
  });
}

async function getByEmail(email: string): Promise<User | null> {
  return await prisma.user.findUnique({
    where: {
      email,
    },
  });
}

async function updateById(id: string, user: UserDto) {
  return await prisma.user.update({
    where: {
      id,
    },
    data: user,
  });
}

export default {
  create,
  getById,
  getByEmail,
  updateById,
};
